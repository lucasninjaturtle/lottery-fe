import React from 'react';
import { ConnectButton } from '@rainbow-me/rainbowkit'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { ethers } from "ethers";
import { abi } from '../helpers/lottery';



export default function Home() {

  const [normalBalance, setNormalBalance] = React.useState(0)
  const [yourWallet, setYourWallet] = React.useState('')
  const [manager, setManager] = React.useState('')
  const [peopleOnLottery, setPeopleOnLottery] = React.useState(0)
  const [contract, setContract] = React.useState('')
const [signer, setSigner] = React.useState('')


  var provider;

  const getConnection = async ()=>{

    if (typeof window !== "undefined") {
      provider = new ethers.providers.Web3Provider(window.ethereum)
    }

    

let accounts = await provider?.send("eth_requestAccounts", []);
    let account = accounts[0];
    // provider.on('accountsChanged', function (accounts) {
    //     account = accounts[0];
    //     console.log(address); // Print new address
    // });

    const signerVar = provider.getSigner();
    setSigner(signerVar)

    const address = await signer.getAddress();
    setYourWallet(address)

const balance = await provider.getBalance(address)
const balanceNormal = await ethers.utils.formatEther(balance)

// console.log(myAccount)

setNormalBalance(balanceNormal)

//CONTRACT

const contractHash = '0xef8ac5Fe65d0BB2c9b53eF360f26150fD4B6fB7D'

//const contractHash = '0x2224124f42C2363555F6Bc594CD7451381778543'

const myContract = new ethers.Contract(contractHash, abi, provider);
setContract(myContract)

//CONNECTING CONTRACT TO BE ABBLE TO SIGN
const daiWithSigner = contract.connect(signer);

//MANAGER
var managerVar = await myContract.callStatic.manager()
setManager(managerVar)

//PEOPLE ON LOTTERY
var peopleOnLotteryVar = await myContract.getPlayers()
setPeopleOnLottery(peopleOnLotteryVar.length)
//console.log(peopleOnLottey.length)



  }
  getConnection()

  //const eth = ethers.utils.getAccountPath

  
//FORM

const [ form, setForm ] = React.useState({
  quantity: '0.01',
});

const onChange = ({ target }) => {
  const { name, value } = target;
  console.log(target.value)
  setForm({
      ...form,
      [name]: value
  });
}

const onSubmit = async(ev) => {
  ev.preventDefault();

  // contract.enter().send({
  //   from: signer,
  //   value: ethers.utils.parseEther(form.quantity)
  //   //form.quantity
  // })
  
  const LotteryWithSigner = contract.connect(signer);

  // LotteryWithSigner.enter({
  //     from: signer,
  //   value: ethers.utils.parseEther(form.quantity)
  // })
  var valueString = ethers.utils.parseUnits(form.quantity)
  
  await LotteryWithSigner.enter({
    from: yourWallet,
    value: valueString,
    gasLimit: 50000,
  });
  


  
  //yourWallet
  
}






//CHECK TOTAL QUANTITY VALUE
const todoOk = () => {
  return ( 
      form.quantity > 0.0001 
  ) ? true : false;
}


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ConnectButton/>
        <h1 className={styles.description}>
         Balance:  {normalBalance}

        <br/>
        Lottery contract:

        <br/>
        Lottery manager: {manager}
        <br/>
        People on Lottery: {peopleOnLottery}

        </h1>
       
       <form
       onSubmit={ onSubmit }
       >

       <h2>Quantity</h2> 
        
        <input
                    className="input100"
                    type="number"
                    name="quantity"
                    placeholder="ETH quantity" 
                    value={form.quantity}
                    onChange={ onChange }
                />
        <br/>
        <button
                    type="submit"
                    className="login100-form-btn"
                    disabled={ !todoOk() }
                >
                    ENTER LOTTERY
                </button>



       </form>
       
        
      </main>

      

     
    </div>
  )
}
